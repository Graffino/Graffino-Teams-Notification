name: graffino-teams-notification-test
run-name: ${{ github.actor }} is performing a Graffino Teams Notification test run
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "develop"

jobs:
  deploy-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]
    steps:
      - name: Workflow start - Microsoft Teams notification message sent
        if: always()
        uses: Graffino/Graffino-Teams-Notification@v2
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_UPDATES }}
          timezone: Europe/Bucharest
          notification-summary: "Test build start"

      - name: Checkout
        id: Checkout
        uses: actions/checkout@master

      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM Packages
        if: success()
        run: |
          yarn install

      - name: Build Frontend
        if: success()
        run: |
          yarn run build

      - name: Test Deployment Start
        uses: ./
        with: 
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: "Deployment Started üöÄ"
          timezone: Europe/Bucharest

      - name: Test Deployment End
        uses: ./
        with: 
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: "Deployment Stopped ü•∑üèº"
          timezone: Europe/Bucharest

      - name: Notify dedicated teams channel
        if: always()
        uses: Graffino/Graffino-Teams-Notification@v2
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_UPDATES }}
          job: ${{ toJson(job) }}
          timezone: Europe/Bucharest
          notification-summary: "Integration run ${{ job.status }}"
